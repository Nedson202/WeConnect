swagger: "2.0"
info:
  description: "Welcome to WeConnect API.
  WeConnect provides a platform that brings businesses and individuals together. This platform creates
   awareness for businesses and gives the users the ability to write reviews about the businesses they have interacted with."

  version: "1"
  title: "WeConnect API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "simeonsamson4@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "weconnect-api-service.herokuapp.com"
basePath: "/api/v1"
tags:
- name: "User"
  description: "Everything about users"
- name: "Business"
  description: "Access to all business methods"
- name: "Reviews"
  description: "Access to all review methods"
schemes:
- "https"
paths:
  /auth/signup:
    post:
      tags:
      - "User"
      summary: "User signup"
      description: "**This endpoint registers a user if all field is filled, a check will be done to make sure your username
      and email are unique, lastly email should be in the proper format.**"
      operationId: "addUser"
      consumes:
      - "application/json"

      produces:

      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user object to add to database"
        required: true
        schema:
          $ref: "#/definitions/userSignUp"
      responses:
        201:
          description: "User signup successful"
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: "Invalid or no input"
        409:
          description: "User with name already exists"
  /auth/login:
    post:
      tags:
      - "User"
      summary: "Login"
      description: "**You need login to become authenticated, no field should be missing**
      On successful login, you'll be provided a token which you'll need to perform actions like,
      * **Register business,**
      * **Update your business,**
      * **Delete your business,**
      * **Post a review,**"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user object to add to database"
        required: true
        schema:
          $ref: "#/definitions/userLogin"
      responses:
        200:
          description: "Login successful"
        400:
          description: "Bad request"
        401:
          description: "Unauthorised, incorrect details"
  /businesses:
    post:
      tags:
      - "Business"
      summary: "Register a business"
      description: "**Register your Businesses with this endpoint, duplicate registration is not allowed**
      **To register a business, you have to be a registered user so that
      you can get a token to use during business registration
      If your token no longer works, get a new one by login in.**"
      operationId: "createBusiness"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "x-access-token"
        description: "Enter your access token"
        type: "string"
        required: true
      - in: "body"
        name: "body"
        description: "user object to add to database"
        required: true
        schema:
          $ref: "#/definitions/createBusiness"
      responses:
        409:
          description: "Business with name or email exists"
        404:
          description: "Business with category is unavailable"
        400:
          description: "Invalid or no input at all"
        201:
          description: "Business registered successful"
          schema:
            $ref: "#/definitions/successMessage"

    get:
      tags:
      - "Business"
      summary: "Get all business"
      description: "**Displays all registered business**"
      operationId: "getBusiness"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Operation successful"
          schema:
            $ref: "#/definitions/responseObject"
        404:
          description: "No business registered yet"

  /businesses?location=location:
    get:
      tags:
      - "Business"
      summary: "Filter businesses by location"
      description: "**Filter all businesses by location, if no business with your specified location is available,
      you'll be notified**"
      produces:
      - "application/json"
      parameters:
        - name: "location"
          in: "query"
          description: "location to filter business"
          required: true
          type: "string"
      responses:
        200:
          description: "Operation successful"
          schema:
            $ref: "#/definitions/responseObject"
        404:
          description: "Business not foound"

  /businesses?category=category:
    get:
      tags:
      - "Business"
      summary: "Filter businesses by category"
      description: "**Filter all businesses by category, if no business with your specified category is available,
      you'll be notified.**
      ***ONE cool thing is that you don't have to complete your query***
      **For instance fin should give you all businesses with finance
      as category**"
      produces:
      - "application/json"
      parameters:
        - name: "category"
          in: "query"
          description: "category to filter businesses by"
          required: true
          type: "string"
      responses:
        200:
          description: "Operation successful"
          schema:
            $ref: "#/definitions/responseObject"
        404:
          description: "Business not found"

  /businesses/{businessId}:
    get:
      tags:
      - "Business"
      summary: "Get a business by ID"
      description: "**Displays business whose ID is specified
      You can get any ID from the GET ALL BUSINESS section.**"
      operationId: "getBusinessById"
      produces:
      - "application/json"
      parameters:
        - name: "businessId"
          in: "path"
          description: "ID of the business to get"
          required: true
          type: "integer"
      responses:
        200:
          description: "Operation successful"
        404:
          description: "Business not found"

    put:
      tags:
      - "Business"
      summary: "Update a business by ID"
      description: "**Queries businesses by provided id  and allows only the owner of the business to perform the update.
      You need your business ID and a token, before you can proceed.**
      ***Your business ID is provided to you after successfully registering your business,
      To generate a token, you need to login to your account and get a token.***"
      operationId: "updateBusiness"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "x-access-token"
        description: "Enter your access token"
        type: "integer"
        required: true
      - name: "businessId"
        in: "path"
        description: "ID of the business that needs to be updated"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "business object to update business with"
        required: true
        schema:
          $ref: "#/definitions/updateBusiness"
      responses:
        201:
          description: "Business updated successfully"
          schema:
            $ref: "#/definitions/successMessage"
        403:
          description: "No write access to business"
        404:
          description: "Business not found"

    delete:
      tags:
      - Business
      summary: "Delete a business by ID"
      description: "**Queries businesses by provided id  and allows only the owner of the business to perform the deletion.
      You need your business ID and a token, before you can proceed.**
      ***Your business ID is provided to you after successfully registering your business,
      To generate a token, you need to login to your account and get a token.***"
      operationId: "deleteBusiness"
      produces:

      - "application/json"
      parameters:
      - in: "header"
        name: "x-access-token"
        description: "Enter your access token"
        type: "string"
        required: true
      - name: "businessId"
        in: "path"
        description: "ID of the business that needs to be deleted"
        required: true
        type: "integer"
      responses:
        200:
          description: "Business deleted successfully"
          schema:
            $ref: "#/definitions/successMessage"
        403:
          description: "No access for modification"
        404:
          description: "Business not found"

  /businesses/{businessId}/reviews:
    post:
      tags:
      - "Reviews"
      summary: "post review"
      description: "**Queries businesses by provided id to post a review under that business.**
      ***You need the business ID and access token to post a review,
      You can get the business ID by going to the GET ALL BUSINESSES section
      or to FILTER THE BUSINESS by LOCATION OR CATEGORY
      To generate a token, you need to login to your account and get a token.***"
      operationId: "postReview"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "x-access-token"
        description: "Enter your access token"
        type: "string"
        required: true
      - name: "businessId"
        in: "path"
        description: "ID of the business to post a review to"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "user object to add to database"
        required: true
        schema:
          $ref: "#/definitions/postReview"
      responses:
        404:
          description: "Business not found"
        400:
          description: "Invalid input"
        201:
          description: "Review posted successful"
          schema:
            $ref: "#/definitions/successMessage"

    get:
      tags:
      - "Reviews"
      summary: "Get all reviews"
      description: "Returns all reviews available under a business"
      operationId: "getReviews"
      produces:
      - "application/json"
      parameters:
        - name: "businessId"
          in: "path"
          description: "ID of the business whose reviews to get"
          required: true
          type: "integer"
      responses:
        200:
          description: "Operation successful"
          schema:
            $ref: "#/definitions/reviewResponseObject"
        404:
          description: "Business not found"
definitions:
  userSignUp:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "userSignUp"
  userLogin:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
    xml:
      name: "userLogin"
  createBusiness:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      address:
        type: "string"
      location:
        type: "string"
      category:
        type: "string"
    xml:
      name: "createBusiness"
  updateBusiness:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      address:
        type: "string"
      location:
        type: "string"
      category:
        type: "string"
  postReview:
    type: "object"
    properties:
      message:
        type: "string"
  responseObject:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      address:
        type: "string"
      location:
        type: "string"
      category:
        type: "string"
      createdAt:
        type: "string"
      updatedAt:
        type: "string"
      categoryId:
        type: "string"
      userId:
        type: "string"
  reviewResponseObject:
    type: "object"
    properties:
      id:
        type: "string"
      reviewer:
        type: "string"
      message:
        type: "string"
      createdAt:
        type: "string"
      updatedAt:
        type: "string"
      businessId:
        type: "string"
  successMessage:
    type: "object"
    properties:
      message:
        type: "string"
      error:
        type: "string"
  loginResponse:
    type: "object"
    properties:
      message:
        type: "string"
      tokenMessage:
        type: "string"
      error:
        type: "string"
      token:
        type: "string"
